// Generated by Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
#ifndef TEAMCIRCLESDK_SWIFT_H
#define TEAMCIRCLESDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import GiphyUISDK;
@import HyphenateChat;
@import IGListDiffKit;
@import IGListKit;
@import ObjectiveC;
@import UIKit;
@import XLPagerTabStrip;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="TeamCircleSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif









@protocol NSObject;

@interface NSObject (SWIFT_EXTENSION(TeamCircleSDK)) <IGListDiffable>
- (id <NSObject> _Nonnull)diffIdentifier SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqualToDiffableObject:(id <IGListDiffable> _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end




@class UIGestureRecognizer;
@class UIViewController;
@class NSString;
@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC13TeamCircleSDK13TCBaseNavCtrl")
@interface TCBaseNavCtrl : UINavigationController <UIGestureRecognizerDelegate>
- (void)viewDidLoad;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer * _Nonnull)gestureRecognizer SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=5.0);
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13TeamCircleSDK11TCBaseVCtrl")
@interface TCBaseVCtrl : UIViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIImageView;
@class UILabel;
@class UIButton;

SWIFT_CLASS("_TtC13TeamCircleSDK10TCBaseView")
@interface TCBaseView : UIView
@property (nonatomic, readonly, strong) UIImageView * _Nonnull imgView;
@property (nonatomic, readonly, strong) UILabel * _Nonnull titleLbl;
@property (nonatomic, readonly, strong) UIButton * _Nonnull btn;
@property (nonatomic, strong) UINavigationController * _Nullable navCtrl;
- (nonnull instancetype)initWithFrame:(CGRect)frame image:(id _Nonnull)image title:(NSString * _Nonnull)title OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13TeamCircleSDK21TCCircleNavController")
@interface TCCircleNavController : UINavigationController
- (void)viewDidLoad;
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=5.0);
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13TeamCircleSDK13TCCircleVCtrl")
@interface TCCircleVCtrl : TCBaseVCtrl
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@class UICollectionView;
@class UIWindow;

SWIFT_CLASS("_TtC13TeamCircleSDK10TCFeedView")
@interface TCFeedView : UIView
@property (nonatomic, weak) IBOutlet UICollectionView * _Nullable collectionView;
@property (nonatomic, weak) IBOutlet UIButton * _Nullable pickerButton;
- (void)willMoveToWindow:(UIWindow * _Nullable)newWindow;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIStoryboardSegue;

SWIFT_CLASS("_TtC13TeamCircleSDK12TCFeedsVCtrl")
@interface TCFeedsVCtrl : TCBaseVCtrl
@property (nonatomic, weak) IBOutlet UICollectionView * _Null_unspecified collectionView;
@property (nonatomic, readonly) BOOL canBecomeFirstResponder;
@property (nonatomic, readonly, strong) UIView * _Nullable inputAccessoryView;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (BOOL)shouldPerformSegueWithIdentifier:(NSString * _Nonnull)identifier sender:(id _Nullable)sender SWIFT_WARN_UNUSED_RESULT;
- (void)prepareForSegue:(UIStoryboardSegue * _Nonnull)segue sender:(id _Nullable)sender;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@protocol UIViewControllerPreviewing;

@interface TCFeedsVCtrl (SWIFT_EXTENSION(TeamCircleSDK)) <UIViewControllerPreviewingDelegate>
- (UIViewController * _Nullable)previewingContext:(id <UIViewControllerPreviewing> _Nonnull)previewingContext viewControllerForLocation:(CGPoint)location SWIFT_WARN_UNUSED_RESULT;
- (void)previewingContext:(id <UIViewControllerPreviewing> _Nonnull)previewingContext commitViewController:(UIViewController * _Nonnull)viewControllerToCommit;
@end

@class IGListAdapter;

@interface TCFeedsVCtrl (SWIFT_EXTENSION(TeamCircleSDK)) <IGListAdapterDelegate>
- (void)listAdapter:(IGListAdapter * _Nonnull)listAdapter willDisplayObject:(id _Nonnull)object atIndex:(NSInteger)index;
- (void)listAdapter:(IGListAdapter * _Nonnull)listAdapter didEndDisplayingObject:(id _Nonnull)object atIndex:(NSInteger)index;
@end

@class GiphyViewController;
@class GPHMedia;

@interface TCFeedsVCtrl (SWIFT_EXTENSION(TeamCircleSDK)) <GiphyDelegate>
- (void)didSearchFor:(NSString * _Nonnull)term;
- (void)didSelectMediaWithGiphyViewController:(GiphyViewController * _Nonnull)giphyViewController media:(GPHMedia * _Nonnull)media;
- (void)didDismissWithController:(GiphyViewController * _Nullable)controller;
@end

@class IGListSectionController;

@interface TCFeedsVCtrl (SWIFT_EXTENSION(TeamCircleSDK)) <IGListAdapterDataSource>
- (NSArray<id <IGListDiffable>> * _Nonnull)objectsForListAdapter:(IGListAdapter * _Nonnull)listAdapter SWIFT_WARN_UNUSED_RESULT;
- (IGListSectionController * _Nonnull)listAdapter:(IGListAdapter * _Nonnull)listAdapter sectionControllerForObject:(id _Nonnull)object SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)emptyViewForListAdapter:(IGListAdapter * _Nonnull)listAdapter SWIFT_WARN_UNUSED_RESULT;
@end


@interface TCFeedsVCtrl (SWIFT_EXTENSION(TeamCircleSDK))
- (void)viewWillAppear:(BOOL)animated;
@end


@class UITextView;

@interface TCFeedsVCtrl (SWIFT_EXTENSION(TeamCircleSDK)) <UITextViewDelegate>
- (BOOL)textViewShouldBeginEditing:(UITextView * _Nonnull)textView SWIFT_WARN_UNUSED_RESULT;
- (void)textViewDidBeginEditing:(UITextView * _Nonnull)textView;
- (void)textViewDidEndEditing:(UITextView * _Nonnull)textView;
- (BOOL)textView:(UITextView * _Nonnull)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
@end

@class UIScrollView;

@interface TCFeedsVCtrl (SWIFT_EXTENSION(TeamCircleSDK)) <UIScrollViewDelegate>
- (void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDragging:(UIScrollView * _Nonnull)scrollView willDecelerate:(BOOL)decelerate;
- (void)scrollViewDidScrollToTop:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewWillEndDragging:(UIScrollView * _Nonnull)scrollView withVelocity:(CGPoint)velocity targetContentOffset:(CGPoint * _Nonnull)targetContentOffset;
@end



SWIFT_CLASS("_TtC13TeamCircleSDK7TCIMBtn")
@interface TCIMBtn : TCBaseView
@property (nonatomic, strong) UILabel * _Nonnull messageCount;
- (nonnull instancetype)initWithFrame:(CGRect)frame image:(id _Nonnull)image title:(NSString * _Nonnull)title SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)requestUnreadIMMessageCount;
- (void)readMessageCount;
- (void)willMoveToWindow:(UIWindow * _Nullable)newWindow;
@end


SWIFT_CLASS("_TtC13TeamCircleSDK20TCLocalizableManager")
@interface TCLocalizableManager : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum TCThemeType : NSInteger;
@class TCStoreBtn;
@class TCStoreVCtrl;
@class TCMeBtn;
@class TCProfileVCtrl;
@class TCNotificBtn;
@class TCNotificationVCtrl;
@class TCPostShareBtn;
@class TCSearchBtn;
@class TCStorePostBarView;
@class UIFont;
@class UIColor;
@class UIImage;
@class TCShareJson;
@class NSURL;

SWIFT_CLASS("_TtC13TeamCircleSDK9TCManager")
@interface TCManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) TCManager * _Nonnull sharedInstance;)
+ (TCManager * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
/// 是否打印Log
@property (nonatomic) BOOL printLog;
@property (nonatomic) BOOL isLogin;
/// SDK版本号：1.0.0
@property (nonatomic, readonly, copy) NSString * _Nonnull version;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// 初始化SDK
/// \param appId appId
///
/// \param appKey appKey
///
/// \param delegate delegate
///
/// \param theme theme
///
- (void)initSDKWithAppId:(NSString * _Nonnull)appId appKey:(NSString * _Nonnull)appKey delegate:(id _Nonnull)delegate theme:(enum TCThemeType)theme SWIFT_METHOD_FAMILY(none);
/// 用户登录
- (void)userLoginWithUserId:(NSString * _Nonnull)userId userName:(NSString * _Nonnull)userName avatarUrl:(NSString * _Nonnull)avatarUrl userEmail:(NSString * _Nonnull)userEmail userBio:(NSString * _Nonnull)userBio;
/// 用户退出
- (void)userLogout;
/// 注销用户
- (void)deleleAccountWithComplete:(void (^ _Nonnull)(NSError * _Nullable))complete;
/// 创建一个圈子导航栏控制器
/// \param complete 回调
///
- (void)initCircleWithComplete:(SWIFT_NOESCAPE void (^ _Nonnull)(TCCircleNavController * _Nullable, NSError * _Nullable))complete SWIFT_METHOD_FAMILY(none);
/// 创建一个商店按钮
/// \param frame frame
///
/// \param complete 回调
///
- (void)initStoreBtnWithFrame:(CGRect)frame complete:(SWIFT_NOESCAPE void (^ _Nonnull)(TCStoreBtn * _Nullable, NSError * _Nullable))complete SWIFT_METHOD_FAMILY(none);
/// 跳转商店列表
- (void)toStoreVCtrlWithNav:(UINavigationController * _Nonnull)nav complete:(SWIFT_NOESCAPE void (^ _Nonnull)(TCStoreVCtrl * _Nullable, NSError * _Nullable))complete;
/// 创建一个我的按钮
- (void)initUserCenterBtnWithFrame:(CGRect)frame image:(id _Nonnull)image title:(NSString * _Nonnull)title complete:(SWIFT_NOESCAPE void (^ _Nonnull)(TCMeBtn * _Nullable, NSError * _Nullable))complete SWIFT_METHOD_FAMILY(none);
/// 跳转我的页面
- (void)toUserCenterVCtrlWithNav:(UINavigationController * _Nonnull)nav complete:(SWIFT_NOESCAPE void (^ _Nonnull)(TCProfileVCtrl * _Nullable, NSError * _Nullable))complete;
/// 注册更新头像跳我的页面,关闭为dissmiss页面
- (void)registeredToProfileVCtrlWithNav:(UINavigationController * _Nonnull)nav complete:(SWIFT_NOESCAPE void (^ _Nonnull)(TCProfileVCtrl * _Nullable, NSError * _Nullable))complete;
- (void)requestUnreadMessageCount;
- (void)requestUnreadIMMessageCount;
/// 判断上传view
- (void)judgeLoadView;
/// 创建一个通知的按钮
- (void)initNotificBtnWithFrame:(CGRect)frame image:(id _Nonnull)image title:(NSString * _Nonnull)title complete:(SWIFT_NOESCAPE void (^ _Nonnull)(TCNotificBtn * _Nullable, NSError * _Nullable))complete SWIFT_METHOD_FAMILY(none);
/// 跳转通知列表
- (void)jumpToNotificationCenterWithNav:(UINavigationController * _Nonnull)nav complete:(SWIFT_NOESCAPE void (^ _Nonnull)(TCNotificationVCtrl * _Nullable, NSError * _Nullable))complete;
/// 创建一个帖子列表
- (void)initFeedControllerWithNav:(UINavigationController * _Nonnull)nav complete:(SWIFT_NOESCAPE void (^ _Nonnull)(TCFeedsVCtrl * _Nullable, NSError * _Nullable))complete SWIFT_METHOD_FAMILY(none);
/// 创建一个分享帖子按钮
- (void)initNewPostBtnWithFrame:(CGRect)frame image:(id _Nonnull)image title:(NSString * _Nonnull)title complete:(SWIFT_NOESCAPE void (^ _Nonnull)(TCPostShareBtn * _Nullable, NSError * _Nullable))complete SWIFT_METHOD_FAMILY(none);
/// 跳转分享帖子页面
- (void)toNewPostVCtrlWithComplete:(SWIFT_NOESCAPE void (^ _Nonnull)(NSError * _Nullable))complete;
/// 创建一个搜索按钮
- (void)initSearchBtnWithFrame:(CGRect)frame image:(id _Nonnull)image title:(NSString * _Nonnull)title complete:(SWIFT_NOESCAPE void (^ _Nonnull)(TCSearchBtn * _Nullable, NSError * _Nullable))complete SWIFT_METHOD_FAMILY(none);
/// 跳转搜索页面
- (void)toSearchVCtrlWithComplete:(SWIFT_NOESCAPE void (^ _Nonnull)(NSError * _Nullable))complete;
- (void)initCustomerPostBarWithFrame:(CGRect)frame nav:(UINavigationController * _Nonnull)nav productId:(NSInteger)productId complete:(SWIFT_NOESCAPE void (^ _Nonnull)(TCStorePostBarView * _Nullable, NSError * _Nullable))complete SWIFT_METHOD_FAMILY(none);
- (BOOL)accountBanAllActivities SWIFT_WARN_UNUSED_RESULT;
/// 设置分享 controller
- (void)setShareJsonController:(UIViewController * _Nonnull)controller complete:(SWIFT_NOESCAPE void (^ _Nonnull)(NSError * _Nullable))complete;
- (BOOL)setTextFontRegularWithFont:(UIFont * _Nullable)font color:(UIColor * _Nullable)color SWIFT_WARN_UNUSED_RESULT;
- (BOOL)setTextFontBoldWithFont:(UIFont * _Nullable)font color:(UIColor * _Nullable)color SWIFT_WARN_UNUSED_RESULT;
- (BOOL)setTextFontActionWithFont:(UIFont * _Nullable)font color:(UIColor * _Nullable)color SWIFT_WARN_UNUSED_RESULT;
- (BOOL)setTextFontProductNameWithFont:(UIFont * _Nullable)font color:(UIColor * _Nullable)color SWIFT_WARN_UNUSED_RESULT;
- (BOOL)setTextFontProductPriceWithFont:(UIFont * _Nullable)font color:(UIColor * _Nullable)color SWIFT_WARN_UNUSED_RESULT;
- (BOOL)setTextFontPricedecimalFrontWithFont:(UIFont * _Nullable)font color:(UIColor * _Nullable)color SWIFT_WARN_UNUSED_RESULT;
- (BOOL)setIconFavoriteWithIcon:(UIImage * _Nonnull)icon SWIFT_WARN_UNUSED_RESULT;
- (BOOL)setIconFavoriteSelectedWithIcon:(UIImage * _Nonnull)icon SWIFT_WARN_UNUSED_RESULT;
- (BOOL)setIconTagWithIcon:(UIImage * _Nonnull)icon SWIFT_WARN_UNUSED_RESULT;
- (BOOL)setIconTagSelectedWithIcon:(UIImage * _Nonnull)icon SWIFT_WARN_UNUSED_RESULT;
- (BOOL)setIconLikeWithIcon:(UIImage * _Nonnull)icon SWIFT_WARN_UNUSED_RESULT;
- (BOOL)setIconLikeSelectedWithIcon:(UIImage * _Nonnull)icon SWIFT_WARN_UNUSED_RESULT;
- (BOOL)setIconCommentWithIcon:(UIImage * _Nonnull)icon SWIFT_WARN_UNUSED_RESULT;
- (BOOL)setIconShareWithIcon:(UIImage * _Nonnull)icon SWIFT_WARN_UNUSED_RESULT;
- (BOOL)setIconBackWithIcon:(UIImage * _Nonnull)icon SWIFT_WARN_UNUSED_RESULT;
- (BOOL)setShareJsonIconsWithDownloadIcon:(UIImage * _Nonnull)downloadIcon disableDownloadIcon:(UIImage * _Nonnull)disableDownloadIcon uploadIcon:(UIImage * _Nonnull)uploadIcon SWIFT_WARN_UNUSED_RESULT;
- (BOOL)setIconNewPostWithIcon:(UIImage * _Nonnull)icon SWIFT_WARN_UNUSED_RESULT;
- (BOOL)setBackgroundEffectColorWithColor:(UIColor * _Nonnull)color SWIFT_WARN_UNUSED_RESULT;
- (BOOL)setSystemBackgroundColorWithColor:(UIColor * _Nonnull)color SWIFT_WARN_UNUSED_RESULT;
- (BOOL)systemNavigationBarTextColorWithColor:(UIColor * _Nonnull)color SWIFT_WARN_UNUSED_RESULT;
- (BOOL)setLinkColorWithColor:(UIColor * _Nonnull)color SWIFT_WARN_UNUSED_RESULT;
- (BOOL)setProductDescColorWithColor:(UIColor * _Nonnull)color SWIFT_WARN_UNUSED_RESULT;
- (BOOL)setPrivacyPolicyWithUrl:(NSString * _Nonnull)url SWIFT_WARN_UNUSED_RESULT;
- (BOOL)setTermsAndConditionsWithUrl:(NSString * _Nonnull)url SWIFT_WARN_UNUSED_RESULT;
- (BOOL)setShareJsonTitleWithTitle:(NSString * _Nonnull)title SWIFT_WARN_UNUSED_RESULT;
- (BOOL)setShareJsonDownloadedTipsWithTips:(NSString * _Nonnull)tips SWIFT_WARN_UNUSED_RESULT;
- (void)setShareJsonWithShareJson:(TCShareJson * _Nonnull)shareJson;
- (void)clearShareJson;
/// 创建一个IM按钮
- (void)initIMBtnWithFrame:(CGRect)frame image:(id _Nonnull)image title:(NSString * _Nonnull)title complete:(SWIFT_NOESCAPE void (^ _Nonnull)(TCIMBtn * _Nullable, NSError * _Nullable))complete SWIFT_METHOD_FAMILY(none);
- (BOOL)isLoggedinIM SWIFT_WARN_UNUSED_RESULT;
- (void)toChatListActionWithNav:(UINavigationController * _Nonnull)nav;
- (void)toChatActionWithNav:(UINavigationController * _Nonnull)nav conversationId:(NSString * _Nonnull)conversationId;
- (GiphyViewController * _Nonnull)getGifVC SWIFT_WARN_UNUSED_RESULT;
- (void)toClearGifCache;
- (void)uploadIMVideoWithUrl:(NSURL * _Nonnull)url complete:(void (^ _Nonnull)(NSString * _Nullable))complete;
- (void)convertVideoUrlWithUrl:(NSString * _Nonnull)url complete:(void (^ _Nonnull)(NSString * _Nullable))complete;
- (void)msgShowHUDWithContent:(NSString * _Nonnull)content delay:(NSTimeInterval)delay;
- (void)msgShowHUDSuccess;
- (BOOL)canLoadIMDataFromServer SWIFT_WARN_UNUSED_RESULT;
- (void)setIMDataNotFromServer;
- (UINavigationController * _Nonnull)getPhotoPickerVC SWIFT_WARN_UNUSED_RESULT;
- (NSBundle * _Nonnull)getBundlePath SWIFT_WARN_UNUSED_RESULT;
- (enum TCThemeType)getTheme SWIFT_WARN_UNUSED_RESULT;
- (void)setNavigationAttributeWithNavigation:(UINavigationController * _Nullable)navigation;
@property (nonatomic, readonly, strong) UIFont * _Nonnull systemTextFront;
@property (nonatomic, readonly, strong) UIFont * _Nonnull systemUserFront;
@property (nonatomic, readonly, strong) UIFont * _Nonnull systemText2Front;
@property (nonatomic, readonly, strong) UIFont * _Nonnull systemText3Front;
@property (nonatomic, readonly, strong) UIFont * _Nonnull systemText4Front;
@property (nonatomic, readonly, strong) UIFont * _Nonnull feedOfficialFont;
@property (nonatomic, readonly, strong) UIFont * _Nonnull chatViewTitleFront;
@property (nonatomic, readonly, strong) UIColor * _Nonnull systemTextColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull systemText2Color;
@property (nonatomic, readonly, strong) UIColor * _Nonnull systemUserColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull systemBackgroundColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull searchBoxBgColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull systemSeparatorColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull feedOfficialBgColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull feedOfficialColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull systemBackgroundEffectColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull msgSendBGColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull msgRecvBGColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull msgTextBoxColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull msgLinkColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull userUnfollowbgColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull productListBgColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull productListCellBgColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull msgDetailCellbgColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull msgDetailSeparatorColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull msgDetailSwitchOffColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull msgSendTextColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull msgRecvTextColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull msgChatBGColor;
@property (nonatomic, readonly, strong) UIColor * _Nonnull msgDetailBGColor;
@property (nonatomic, readonly, strong) UIImage * _Nonnull backImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull newPostSearchImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull systemDefaultUserImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull systemPlaceholderUserImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull feedMoreImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgSendBGImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgRecvBGImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgChatBarMoreImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgChatBarCancelMoreImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgChatBarVoiceImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgChatBarKeyboardImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgChatBarGifImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgChatBarAlbumImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgChatBarCameraImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgSendFailImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgCopyImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgDeleteImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgRecallImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgForwardImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgSaveImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgSendAudioImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgSendAudio1Image;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgSendAudio2Image;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgRecvAudioImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgRecvAudio1Image;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgRecvAudio2Image;
@property (nonatomic, readonly, strong) UIImage * _Nonnull feedMusicPauseImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgImgBrokenImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgVideoDefaultImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgAudioBtnImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgAudioSlide01WhiteImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgAudioSlide02WhiteImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgAudioSlide03WhiteImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgAudioSlide01BlueImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgAudioSlide02BlueImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgAudioSlide03BlueImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgRedAudioBtnImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgBlueAudioBtnImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull userRightImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgListMuteImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgAbumImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull userMoreImage;
@property (nonatomic, readonly, strong) UIImage * _Nonnull msgShareImage;
@property (nonatomic, readonly, copy) NSString * _Nonnull searchText;
@property (nonatomic, readonly, copy) NSString * _Nonnull messageText;
@property (nonatomic, readonly, copy) NSString * _Nonnull noChatInformationText;
@property (nonatomic, readonly, copy) NSString * _Nonnull officialStaffText;
@property (nonatomic, readonly, copy) NSString * _Nonnull deleteText;
@property (nonatomic, readonly, copy) NSString * _Nonnull areYouSureToDeleteText;
@property (nonatomic, readonly, copy) NSString * _Nonnull cancelText;
@property (nonatomic, readonly, copy) NSString * _Nonnull stickOnTopText;
@property (nonatomic, readonly, copy) NSString * _Nonnull cancelOnTopText;
@property (nonatomic, readonly, copy) NSString * _Nonnull markAsReadText;
@property (nonatomic, readonly, copy) NSString * _Nonnull markAsUnreadText;
@property (nonatomic, readonly, copy) NSString * _Nonnull typingText;
@property (nonatomic, readonly, copy) NSString * _Nonnull albumText;
@property (nonatomic, readonly, copy) NSString * _Nonnull cameraText;
@property (nonatomic, readonly, copy) NSString * _Nonnull sendAMessageText;
@property (nonatomic, readonly, copy) NSString * _Nonnull readText;
@property (nonatomic, readonly, copy) NSString * _Nonnull pictureText;
@property (nonatomic, readonly, copy) NSString * _Nonnull videoText;
@property (nonatomic, readonly, copy) NSString * _Nonnull someoneMeText;
@property (nonatomic, readonly, copy) NSString * _Nonnull youRetractMessageText;
@property (nonatomic, readonly, copy) NSString * _Nonnull theOtherPartyWithdrawsMessageText;
@property (nonatomic, readonly, copy) NSString * _Nonnull copyText;
@property (nonatomic, readonly, copy) NSString * _Nonnull withdrawText;
@property (nonatomic, readonly, copy) NSString * _Nonnull forwardText;
@property (nonatomic, readonly, copy) NSString * _Nonnull saveText;
@property (nonatomic, readonly, copy) NSString * _Nonnull selectLinkOpenText;
@property (nonatomic, readonly, copy) NSString * _Nonnull getThumbnailsText;
@property (nonatomic, readonly, copy) NSString * _Nonnull downloadOriginalText;
@property (nonatomic, readonly, copy) NSString * _Nonnull failedDownloadOriginalText;
@property (nonatomic, readonly, copy) NSString * _Nonnull failedGetOriginalText;
@property (nonatomic, readonly, copy) NSString * _Nonnull downloadingVoiceLaterText;
@property (nonatomic, readonly, copy) NSString * _Nonnull downloadVoiceText;
@property (nonatomic, readonly, copy) NSString * _Nonnull failedDownloadVoiceText;
@property (nonatomic, readonly, copy) NSString * _Nonnull downloadVideoText;
@property (nonatomic, readonly, copy) NSString * _Nonnull failedDownloadVideoText;
@property (nonatomic, readonly, copy) NSString * _Nonnull downloadingVideoLaterText;
@property (nonatomic, readonly, copy) NSString * _Nonnull downloadThumbnailsText;
@property (nonatomic, readonly, copy) NSString * _Nonnull holdToTalkText;
@property (nonatomic, readonly, copy) NSString * _Nonnull releaseSendText;
@property (nonatomic, readonly, copy) NSString * _Nonnull releaseCancelText;
@property (nonatomic, readonly, copy) NSString * _Nonnull pictureTooBigText;
@property (nonatomic, readonly, copy) NSString * _Nonnull videoTooLargeText;
@property (nonatomic, readonly, copy) NSString * _Nonnull speakingTimeTooShortText;
@property (nonatomic, readonly, copy) NSString * _Nonnull relayMessageText;
@property (nonatomic, readonly, copy) NSString * _Nonnull detailText;
@property (nonatomic, readonly, copy) NSString * _Nonnull clearChatPromptText;
@property (nonatomic, readonly, copy) NSString * _Nonnull clearText;
@property (nonatomic, readonly, copy) NSString * _Nonnull chatHistoryClearedText;
@property (nonatomic, readonly, copy) NSString * _Nonnull failedClearChatRecordText;
@property (nonatomic, readonly, copy) NSString * _Nonnull failedSetNoDisturbText;
@property (nonatomic, readonly, copy) NSString * _Nonnull searchChatHistoryText;
@property (nonatomic, readonly, copy) NSString * _Nonnull browseChatMediaText;
@property (nonatomic, readonly, copy) NSString * _Nonnull muteNotificationText;
@property (nonatomic, readonly, copy) NSString * _Nonnull stickyOnTopText;
@property (nonatomic, readonly, copy) NSString * _Nonnull clearChatHistoryText;
@property (nonatomic, readonly, copy) NSString * _Nonnull mediaText;
@property (nonatomic, readonly, copy) NSString * _Nonnull noText;
@property (nonatomic, readonly, copy) NSString * _Nonnull chathistoryfoundText;
@property (nonatomic, readonly, copy) NSString * _Nonnull voiceText;
@property (nonatomic, readonly, copy) NSString * _Nonnull noResultText;
@property (nonatomic, readonly, copy) NSString * _Nonnull yesterdayText;
@property (nonatomic, readonly, copy) NSString * _Nonnull msgHasBlockdPromptText;
@property (nonatomic, readonly, copy) NSString * _Nonnull bANALLACTIVITIESPromptText;
@property (nonatomic, readonly, copy) NSString * _Nonnull closeText;
@property (nonatomic, readonly, copy) NSString * _Nonnull doneText;
@property (nonatomic, readonly) NSNotificationName _Nonnull msgIMPhotoFinishName;
@property (nonatomic, readonly) NSNotificationName _Nonnull msgIMVidoFinishName;
@property (nonatomic, readonly) NSNotificationName _Nonnull commentPhotoName;
@property (nonatomic, readonly, copy) NSString * _Nonnull messageIMPostOjbect;
@property (nonatomic, readonly, copy) NSString * _Nonnull messageIMCustomVideoEvent;
@property (nonatomic, readonly, copy) NSString * _Nonnull messageIMCustomVideoKey;
@property (nonatomic, readonly, copy) NSString * _Nonnull messageIMChatPageKey;
@end

@class EMError;

@interface TCManager (SWIFT_EXTENSION(TeamCircleSDK)) <EMClientDelegate>
- (void)userAccountDidForcedToLogout:(EMError * _Nullable)aError;
- (void)autoLoginDidCompleteWithError:(EMError * _Nullable)aError;
@end


@class EMChatMessage;
@class EMConversation;

@interface TCManager (SWIFT_EXTENSION(TeamCircleSDK)) <EMChatManagerDelegate>
- (void)messagesDidReceive:(NSArray<EMChatMessage *> * _Nonnull)aMessages;
- (void)messagesDidRead:(NSArray<EMChatMessage *> * _Nonnull)aMessages;
- (void)conversationListDidUpdate:(NSArray<EMConversation *> * _Nonnull)aConversationList;
- (void)onConversationRead:(NSString * _Nonnull)from to:(NSString * _Nonnull)to;
@end

@class NSError;

SWIFT_PROTOCOL("_TtP13TeamCircleSDK17TCManagerDelegate_")
@protocol TCManagerDelegate
/// SDK发生错误
- (void)teamCirleFailWithError:(NSError * _Nonnull)error;
/// SDK初始化成功
- (void)teamCirleSDKInit;
/// 用户登录成功
- (void)teamCirleAccountLogin;
/// 用户退出成功
- (void)teamCirleAccountLogout;
/// 用户点击注销
- (void)teamCirleDeleteAccount;
/// 用户信息修改
- (void)teamCirleAccountProfileChangeWithAccountName:(NSString * _Nonnull)accountName avatarUrl:(NSString * _Nonnull)avatarUrl bio:(NSString * _Nonnull)bio;
/// share json内容
- (void)shareJsonDownloadedWithJson:(NSString * _Nonnull)json;
/// 未读通知数修改
- (void)notificationStateChangedWithCount:(NSInteger)count;
/// 未读IM数修改
- (void)messageChangedWithCount:(NSInteger)count;
@end


SWIFT_CLASS("_TtC13TeamCircleSDK7TCMeBtn")
@interface TCMeBtn : TCBaseView
@property (nonatomic, strong) UILabel * _Nonnull messageCount;
- (nonnull instancetype)initWithFrame:(CGRect)frame image:(id _Nonnull)image title:(NSString * _Nonnull)title SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)requestUnreadMessageCount;
- (void)readMessageCount;
@end


SWIFT_CLASS("_TtC13TeamCircleSDK12TCNotificBtn")
@interface TCNotificBtn : TCBaseView
- (nonnull instancetype)initWithFrame:(CGRect)frame image:(id _Nonnull)image title:(NSString * _Nonnull)title OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13TeamCircleSDK19TCNotificationVCtrl")
@interface TCNotificationVCtrl : TCBaseVCtrl
/// –>
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@interface TCNotificationVCtrl (SWIFT_EXTENSION(TeamCircleSDK)) <UIScrollViewDelegate>
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
@end


SWIFT_CLASS("_TtC13TeamCircleSDK14TCPostShareBtn")
@interface TCPostShareBtn : TCBaseView
- (nonnull instancetype)initWithFrame:(CGRect)frame image:(id _Nonnull)image title:(NSString * _Nonnull)title OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13TeamCircleSDK14TCProfileVCtrl")
@interface TCProfileVCtrl : TCBaseVCtrl
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified pickerButton;
+ (TCProfileVCtrl * _Nonnull)initFromStoryboardWithAccountId:(NSString * _Nonnull)accountId SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class IGListSingleSectionController;

@interface TCProfileVCtrl (SWIFT_EXTENSION(TeamCircleSDK)) <IGListSingleSectionControllerDelegate>
- (void)didSelectSectionController:(IGListSingleSectionController * _Nonnull)sectionController withObject:(id _Nonnull)object;
- (BOOL)shouldPerformSegueWithIdentifier:(NSString * _Nonnull)identifier sender:(id _Nullable)sender SWIFT_WARN_UNUSED_RESULT;
@end


@interface TCProfileVCtrl (SWIFT_EXTENSION(TeamCircleSDK)) <IGListAdapterDataSource, UIScrollViewDelegate>
- (NSArray<id <IGListDiffable>> * _Nonnull)objectsForListAdapter:(IGListAdapter * _Nonnull)listAdapter SWIFT_WARN_UNUSED_RESULT;
- (IGListSectionController * _Nonnull)listAdapter:(IGListAdapter * _Nonnull)listAdapter sectionControllerForObject:(id _Nonnull)object SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)emptyViewForListAdapter:(IGListAdapter * _Nonnull)listAdapter SWIFT_WARN_UNUSED_RESULT;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewWillEndDragging:(UIScrollView * _Nonnull)scrollView withVelocity:(CGPoint)velocity targetContentOffset:(CGPoint * _Nonnull)targetContentOffset;
@end



SWIFT_CLASS("_TtC13TeamCircleSDK11TCSearchBtn")
@interface TCSearchBtn : TCBaseView
- (nonnull instancetype)initWithFrame:(CGRect)frame image:(id _Nonnull)image title:(NSString * _Nonnull)title OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP13TeamCircleSDK25TCShareControllerDelegate_")
@protocol TCShareControllerDelegate
/// 清除页面数据
- (void)teamCirleShareClear;
@end


SWIFT_CLASS("_TtC13TeamCircleSDK11TCShareJson")
@interface TCShareJson : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC13TeamCircleSDK10TCStoreBtn")
@interface TCStoreBtn : TCBaseView
- (nonnull instancetype)initWithFrame:(CGRect)frame image:(id _Nonnull)image title:(NSString * _Nonnull)title OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13TeamCircleSDK18TCStorePostBarView")
@interface TCStorePostBarView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame productId:(NSInteger)productId navigationController:(UINavigationController * _Nonnull)navigationController OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class NSIndexPath;
@class UICollectionViewCell;
@class UICollectionViewLayout;

@interface TCStorePostBarView (SWIFT_EXTENSION(TeamCircleSDK)) <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


SWIFT_CLASS("_TtC13TeamCircleSDK12TCStoreVCtrl")
@interface TCStoreVCtrl : ButtonBarPagerTabStripViewController
@property (nonatomic, strong) UIFont * _Nonnull buttonBarItemFont;
@property (nonatomic, strong) UIFont * _Nonnull secondButtonBarItemFont;
@property (nonatomic, strong) UIColor * _Nonnull buttonBarItemTitleColor;
@property (nonatomic, strong) UIColor * _Nonnull buttonBarItemSelectTitleColor;
- (void)viewDidLoad;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



@interface TCStoreVCtrl (SWIFT_EXTENSION(TeamCircleSDK))
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
@end

typedef SWIFT_ENUM(NSInteger, TCThemeType, closed) {
  TCThemeTypeLight = 0,
  TCThemeTypeDark = 1,
};


@class UIEvent;

@interface UIButton (SWIFT_EXTENSION(TeamCircleSDK))
- (BOOL)pointInside:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
@end









@class UITouch;

@interface UILabel (SWIFT_EXTENSION(TeamCircleSDK))
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesCancelled:(NSSet<UITouch *> * _Nullable)touches withEvent:(UIEvent * _Nullable)event;
- (UIView * _Nullable)hitTest:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
@end














#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif
